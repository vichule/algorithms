/*
Given an integer array nums, find a 
subarray
 that has the largest product, and return the product.

The test cases are generated so that the answer will fit in a 32-bit integer.

 

Example 1:

Input: nums = [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.
Example 2:

Input: nums = [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.
*/

let example1 = [2,3,-2,4]
let example2 = [-2,0,-1]
let example3 = [-2,3,-4]

function maxProduct(nums){
    let maxInd = [nums[0]]
    let minInd = [nums[0]]
    let max = nums[0]

    for(let i = 1; i < nums.length; i++){
        const num = nums[i]

        maxInd[i] = Math.max(num, num * maxInd[i -1], num * minInd[i -1])
        minInd[i] = Math.min(num, num * maxInd[i -1], num * minInd[i -1])

        max = Math.max(max, maxInd[i])
    }

    return max
}

console.log(maxProduct(example1)) //6
console.log(maxProduct(example2)) //0
console.log(maxProduct(example3)) //24